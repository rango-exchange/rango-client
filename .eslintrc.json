{
  "env": {
    "browser": true,
    "es2021": true
  },
  "parser": "@typescript-eslint/parser",
  "plugins": [
    "@typescript-eslint",
    "import",
    "react",
    "react-hooks",
    "destructuring"
  ],
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:prettier/recommended",
    "plugin:react/recommended"
  ],
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": true
  },
  "rules": {
    "no-extra-boolean-cast": "off",
    "multiline-comment-style": "error",
    "arrow-spacing": "error",
    "curly": ["error", "all"],
    "no-else-return": "error",
    "no-multiple-empty-lines": "error",
    "sort-imports": [
      "error",
      {
        "ignoreCase": true,
        "ignoreDeclarationSort": true
      }
    ],
    "import/order": [
      "error",
      {
        "newlines-between": "always",
        "groups": [
          "type",
          "builtin",
          "external",
          "internal",
          "parent",
          "sibling",
          "object",
          "index"
        ],
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        }
      }
    ],
    "import/first": "error",
    "import/no-duplicates": "error",
    "import/newline-after-import": [
      "error",
      {
        "count": 1
      }
    ],
    "react-hooks/rules-of-hooks": "error",
    "react/no-array-index-key": "error",
    "react/jsx-no-constructed-context-values": "error",
    "react/jsx-key": "error",
    "react/no-unescaped-entities": "off",
    "destructuring/in-params": "error",
    "destructuring/in-methods-params": "error",
    // These rules will be override by @typescript-eslint
    "no-unused-vars": "off",
    "no-throw-literal": "off",
    "no-magic-numbers": "off",
    "camelcase": "off",
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "varsIgnorePattern": "^_",
        "argsIgnorePattern": "^_",
        "ignoreRestSiblings": true
      }
    ],
    "@typescript-eslint/no-throw-literal": "error",
    "@typescript-eslint/no-magic-numbers": [
      "error",
      {
        "ignore": [-1, 0, 1, 2]
      }
    ],
    "@typescript-eslint/consistent-type-exports": "error",
    "@typescript-eslint/consistent-type-imports": "error",
    "@typescript-eslint/member-ordering": "error",
    "@typescript-eslint/no-floating-promises": "error",
    "@typescript-eslint/no-misused-promises": [
      "error",
      {
        "checksVoidReturn": false
      }
    ],
    "@typescript-eslint/no-mixed-enums": "error",
    "@typescript-eslint/no-unnecessary-type-assertion": "error",
    "@typescript-eslint/prefer-enum-initializers": "error",
    "@typescript-eslint/promise-function-async": "error",
    "@typescript-eslint/switch-exhaustiveness-check": "error"
    // "@typescript-eslint/explicit-function-return-type": "error",
    // "@typescript-eslint/naming-convention": [
    //   "error",
    //   {
    //     "selector": "default",
    //     "format": ["camelCase"]
    //   },

    //   {
    //     "selector": "variable",
    //     "format": ["camelCase", "UPPER_CASE"]
    //   },
    //   {
    //     "selector": "parameter",
    //     "format": ["camelCase"],
    //     "leadingUnderscore": "allow"
    //   },

    //   {
    //     "selector": "memberLike",
    //     "modifiers": ["private"],
    //     "format": ["camelCase"],
    //     "leadingUnderscore": "require"
    //   },

    //   {
    //     "selector": "typeLike",
    //     "format": ["PascalCase"]
    //   }
    // ]
  }
}
