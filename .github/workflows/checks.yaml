name: Check PR
on:
  pull_request:
    types: [opened, reopened, synchronize, labeled]

jobs:
  # Build shared libraries first
  build-libs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Prepare
        uses: ./.github/actions/prepare

      - name: Build Libraries
        run: node ./scripts/build-libs/command.mjs

      # Upload built libraries as artifact
      - name: Upload Built Libraries
        uses: actions/upload-artifact@v4
        with:
          name: built-libraries
          path: |
            widget/*/dist",
            queue-manager/*/dist",
            wallets/*/dist",
            signers/*/dist",
            logging/*/dist"
          retention-days: 1

  # Run checks (without building libs again)
  check:
    runs-on: ubuntu-latest
    needs: build-libs
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Prepare
        uses: ./.github/actions/prepare

      # Download pre-built libraries
      - name: Download Built Libraries
        uses: actions/download-artifact@v4
        with:
          name: built-libraries

      - name: Checking Conventional Commits
        run: node ./scripts/check-conventional-commits/command.mjs
        env:
          REF: ${{ github.ref }}

      - name: Extract new translation keys and check if any error exists
        run: node ./scripts/lingui/command.js extract --clean

      - name: Compile new translation keys
        run: yarn run i18n:compile

      - name: Test
        run: yarn run test

      - id: upload_artifacts
        name: Upload Build Artifacts
        uses: ./.github/actions/upload-build-artifacts
        
      - name: Build examples
        uses: ./.github/actions/build-examples        

    outputs:
      artifact_name: ${{ steps.upload_artifacts.outputs.hashed }}

  # Deploy - runs in parallel with build-examples
  deploy:
    runs-on: ubuntu-latest
    needs: build-libs
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Prepare
        uses: ./.github/actions/prepare

      # Download pre-built libraries
      - name: Download Built Libraries
        uses: actions/download-artifact@v4
        with:
          name: built-libraries

      - name: Preview Deployment
        id: deploy
        run: |
          yarn global add vercel
          yarn run deploy
        env:
          REF: ${{ github.ref }}
          GH_TOKEN: ${{ github.token }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_WIDGET_CONFIG: ${{ secrets.VERCEL_PROJECT_WIDGET_CONFIG }}
          VERCEL_PROJECT_WIDGET_APP: ${{ secrets.VERCEL_PROJECT_WIDGET_APP }}
          VERCEL_PROJECT_STORYBOOK: ${{ secrets.VERCEL_PROJECT_STORYBOOK }}
          ENABLE_PREVIEW_DEPLOY: true

    outputs:
      app_url: ${{ steps.deploy.outputs.widget-app-url }}
      playground_url: ${{ steps.deploy.outputs.widget-playground-url }}
      storybook_url: ${{ steps.deploy.outputs.storybook-url }}


  # Preview environments - depend on deploy job
  app-preview:
    runs-on: ubuntu-latest
    needs: deploy
    environment:
      name: app-preview
      url: ${{ steps.seturl.outputs.url }}
    steps:
      - name: Extract Preview URL
        id: seturl
        run: |
          echo "url=${{ needs.deploy.outputs.app_url }}" >> $GITHUB_OUTPUT
          echo "Preview URL: ${{ needs.deploy.outputs.app_url }}"

  playground-preview:
    runs-on: ubuntu-latest
    needs: deploy
    environment:
      name: playground-preview
      url: ${{ steps.seturl.outputs.url }}
    steps:
      - name: Extract Preview URL
        id: seturl
        run: |
          echo "url=${{ needs.deploy.outputs.playground_url }}" >> $GITHUB_OUTPUT
          echo "Preview URL: ${{ needs.deploy.outputs.playground_url }}"

  storybook-preview:
    runs-on: ubuntu-latest
    needs: deploy
    environment:
      name: storybook-preview
      url: ${{ steps.seturl.outputs.url }}
    steps:
      - name: Extract Preview URL
        id: seturl
        run: |
          echo "url=${{ needs.deploy.outputs.storybook_url }}" >> $GITHUB_OUTPUT
          echo "Preview URL: ${{ needs.deploy.outputs.storybook_url }}"

  # Bundle analysis - depends on check job
  analyze-bundle:
    needs: check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: Prepare
        uses: ./.github/actions/prepare

      - name: Download Build Information For Current Branch
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: ${{ needs.check.outputs.artifact_name }}
          path: 'current-branch'

      - name: Hash Target Branch Name
        id: hash_target_branch_name
        run: |
          hashed_name=$(printf "%s" "${{ github.base_ref }}" | base64 -w 0)
          echo "hashed=${hashed_name}" >> $GITHUB_OUTPUT

      - name: Analyze Bundles And Create Report
        run: node ./scripts/analyze-bundle/command.mjs --currentBranchDirectory current-branch --targetBranchDirectory target-branch --targetBranchArtifactName ${{ steps.hash_target_branch_name.outputs.hashed }}
        env:
          GH_TOKEN: ${{ github.token }}
          GH_REPOSITORY: ${{ github.repository }}